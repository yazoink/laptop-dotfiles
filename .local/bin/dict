#!/bin/bash

# dependencies: jq, curl

usage () {
    printf "dict by yazoink (2023)\nusage: dict [--max-results,-m <number>] <word1> <word2> <etc>\n"
}

defineall() {
    if maxspecified "$@"; then
        if [[ ! "$2" == "0" ]]; then
            resultnum="$2"
            shift 2
        else
            printf "Please enter a number greater than 0.\n"
            return 0
        fi
    fi
    for ((i=1; i<=$#; i++)); do
        jsondata="$(curl -s https://api.dictionaryapi.dev/api/v2/entries/en/"${!i}")"
        if [[ "$jsondata" == *"phonetic"* ]]; then
            definitions=($(getdefinitions "$jsondata"))
            phonetic=$(getphonetic "$jsondata")
            printf "\033[1m%s\033[0m \033[0;31m%s\033[0m\n" "${!i}" "$phonetic"
            counter=1
            if [[ "$resultnum" -eq "0" ]] || [[ "$resultnum" -gt "${#definitions[@]}" ]]; then
                results="${#definitions[@]}"
            else
                results="$resultnum"
            fi
            for ((j=0; j<results; j++)); do
                printf "\033[1;36m%s)\033[0m %s\n" "$counter" "$(echo "${definitions[j]}" | sed 's/-/ /g')"
                ((counter++))
            done
            if [[ "$i" != "$#" ]]; then
                printf "\n"
            fi
        else
            printf "\033[1m%s\033[0m could not be found in the dictionary.\n" "${!i}"
        fi
    done
    return 0
}

maxspecified () {
    if [[ "$1" == "--max-results" ]] || [[ "$1" == "-m" ]]; then
        return 0
    else
        return 1
    fi
}

getphonetic () {
    phonetic=$(echo "$jsondata" | jq -r '.[0].phonetics.[1].text')
    if [[ "$phonetic" == "null" ]]; then
        echo ""
    else
        echo "($phonetic)"
    fi
}

getdefinitions () {
    i=0
    while read -r line; do
        definitions[i]=$(echo "$line" | sed 's/ /-/g')
        ((i++))
    done < <(echo "$1" | jq -r '.[0].meanings[].definitions[].definition')
    echo "${definitions[@]}"
}

case "$1" in
    -h | --help | "") usage && exit 0 ;;
    *) defineall "$@" && exit 0 ;;
esac
